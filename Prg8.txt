#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

#define MAX 20

int x[MAX];
int s[MAX];
int d, flag = 0;

void SumofSub(int m, int k, int r);
void inputArray(int arr[], int n);

int main() {
int n, sum = 0;

printf(&quot;Enter the number of elements: &quot;);

scanf(&quot;%d&quot;, &amp;n);

printf(&quot;Enter the elements:\n&quot;);
inputArray(s, n);

printf(&quot;Enter the value of d: &quot;);
scanf(&quot;%d&quot;, &amp;d);

for (int i = 1; i &lt;= n; i++) {
sum += s[i];
}

if (sum &lt; d || s[1] &gt; d) {
printf(&quot;The given problem instance does not have a solution\n&quot;);
return 0;
} else {
printf(&quot;Subsets are:\n&quot;);
SumofSub(0, 1, sum);
}

if (flag == 0) {
printf(&quot;No subset possible\n&quot;);
}

return 0;
}

// Method to Calculate the Subset Sum
void SumofSub(int m, int k, int r) {
int i;
x[k] = 1;
if (m + s[k] == d) {
flag = 1;

printf(&quot;{&quot;);
for (i = 1; i &lt;= k; i++) {
if (x[i] == 1) {
printf(&quot;%d &quot;, s[i]);
}
}

printf(&quot;}\n&quot;);
} else if ((m + s[k] + s[k + 1]) &lt;= d) {
SumofSub(m + s[k], k + 1, r - s[k]);
}

if ((m + r - s[k] &gt;= d) &amp;&amp; (m + s[k + 1] &lt;= d)) {
x[k] = 0;
SumofSub(m, k + 1, r - s[k]);
}
}

// Function to input array elements
void inputArray(int arr[], int n) {
for (int i = 1; i &lt;= n; i++) {
scanf(&quot;%d&quot;, &amp;arr[i]);
}
}